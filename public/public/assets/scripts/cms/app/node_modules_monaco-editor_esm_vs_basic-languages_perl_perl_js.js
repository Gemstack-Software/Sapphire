"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunksapphire"] = self["webpackChunksapphire"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_perl_perl_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js":
/*!************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.43.0(94c055bcbdd49f04a0fa15515e848542a79fb948)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/perl/perl.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".perl\",\n  brackets: [\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  keywords: [\n    \"__DATA__\",\n    \"else\",\n    \"lock\",\n    \"__END__\",\n    \"elsif\",\n    \"lt\",\n    \"__FILE__\",\n    \"eq\",\n    \"__LINE__\",\n    \"exp\",\n    \"ne\",\n    \"sub\",\n    \"__PACKAGE__\",\n    \"for\",\n    \"no\",\n    \"and\",\n    \"foreach\",\n    \"or\",\n    \"unless\",\n    \"cmp\",\n    \"ge\",\n    \"package\",\n    \"until\",\n    \"continue\",\n    \"gt\",\n    \"while\",\n    \"CORE\",\n    \"if\",\n    \"xor\",\n    \"do\",\n    \"le\",\n    \"__DIE__\",\n    \"__WARN__\"\n  ],\n  builtinFunctions: [\n    \"-A\",\n    \"END\",\n    \"length\",\n    \"setpgrp\",\n    \"-B\",\n    \"endgrent\",\n    \"link\",\n    \"setpriority\",\n    \"-b\",\n    \"endhostent\",\n    \"listen\",\n    \"setprotoent\",\n    \"-C\",\n    \"endnetent\",\n    \"local\",\n    \"setpwent\",\n    \"-c\",\n    \"endprotoent\",\n    \"localtime\",\n    \"setservent\",\n    \"-d\",\n    \"endpwent\",\n    \"log\",\n    \"setsockopt\",\n    \"-e\",\n    \"endservent\",\n    \"lstat\",\n    \"shift\",\n    \"-f\",\n    \"eof\",\n    \"map\",\n    \"shmctl\",\n    \"-g\",\n    \"eval\",\n    \"mkdir\",\n    \"shmget\",\n    \"-k\",\n    \"exec\",\n    \"msgctl\",\n    \"shmread\",\n    \"-l\",\n    \"exists\",\n    \"msgget\",\n    \"shmwrite\",\n    \"-M\",\n    \"exit\",\n    \"msgrcv\",\n    \"shutdown\",\n    \"-O\",\n    \"fcntl\",\n    \"msgsnd\",\n    \"sin\",\n    \"-o\",\n    \"fileno\",\n    \"my\",\n    \"sleep\",\n    \"-p\",\n    \"flock\",\n    \"next\",\n    \"socket\",\n    \"-r\",\n    \"fork\",\n    \"not\",\n    \"socketpair\",\n    \"-R\",\n    \"format\",\n    \"oct\",\n    \"sort\",\n    \"-S\",\n    \"formline\",\n    \"open\",\n    \"splice\",\n    \"-s\",\n    \"getc\",\n    \"opendir\",\n    \"split\",\n    \"-T\",\n    \"getgrent\",\n    \"ord\",\n    \"sprintf\",\n    \"-t\",\n    \"getgrgid\",\n    \"our\",\n    \"sqrt\",\n    \"-u\",\n    \"getgrnam\",\n    \"pack\",\n    \"srand\",\n    \"-w\",\n    \"gethostbyaddr\",\n    \"pipe\",\n    \"stat\",\n    \"-W\",\n    \"gethostbyname\",\n    \"pop\",\n    \"state\",\n    \"-X\",\n    \"gethostent\",\n    \"pos\",\n    \"study\",\n    \"-x\",\n    \"getlogin\",\n    \"print\",\n    \"substr\",\n    \"-z\",\n    \"getnetbyaddr\",\n    \"printf\",\n    \"symlink\",\n    \"abs\",\n    \"getnetbyname\",\n    \"prototype\",\n    \"syscall\",\n    \"accept\",\n    \"getnetent\",\n    \"push\",\n    \"sysopen\",\n    \"alarm\",\n    \"getpeername\",\n    \"quotemeta\",\n    \"sysread\",\n    \"atan2\",\n    \"getpgrp\",\n    \"rand\",\n    \"sysseek\",\n    \"AUTOLOAD\",\n    \"getppid\",\n    \"read\",\n    \"system\",\n    \"BEGIN\",\n    \"getpriority\",\n    \"readdir\",\n    \"syswrite\",\n    \"bind\",\n    \"getprotobyname\",\n    \"readline\",\n    \"tell\",\n    \"binmode\",\n    \"getprotobynumber\",\n    \"readlink\",\n    \"telldir\",\n    \"bless\",\n    \"getprotoent\",\n    \"readpipe\",\n    \"tie\",\n    \"break\",\n    \"getpwent\",\n    \"recv\",\n    \"tied\",\n    \"caller\",\n    \"getpwnam\",\n    \"redo\",\n    \"time\",\n    \"chdir\",\n    \"getpwuid\",\n    \"ref\",\n    \"times\",\n    \"CHECK\",\n    \"getservbyname\",\n    \"rename\",\n    \"truncate\",\n    \"chmod\",\n    \"getservbyport\",\n    \"require\",\n    \"uc\",\n    \"chomp\",\n    \"getservent\",\n    \"reset\",\n    \"ucfirst\",\n    \"chop\",\n    \"getsockname\",\n    \"return\",\n    \"umask\",\n    \"chown\",\n    \"getsockopt\",\n    \"reverse\",\n    \"undef\",\n    \"chr\",\n    \"glob\",\n    \"rewinddir\",\n    \"UNITCHECK\",\n    \"chroot\",\n    \"gmtime\",\n    \"rindex\",\n    \"unlink\",\n    \"close\",\n    \"goto\",\n    \"rmdir\",\n    \"unpack\",\n    \"closedir\",\n    \"grep\",\n    \"say\",\n    \"unshift\",\n    \"connect\",\n    \"hex\",\n    \"scalar\",\n    \"untie\",\n    \"cos\",\n    \"index\",\n    \"seek\",\n    \"use\",\n    \"crypt\",\n    \"INIT\",\n    \"seekdir\",\n    \"utime\",\n    \"dbmclose\",\n    \"int\",\n    \"select\",\n    \"values\",\n    \"dbmopen\",\n    \"ioctl\",\n    \"semctl\",\n    \"vec\",\n    \"defined\",\n    \"join\",\n    \"semget\",\n    \"wait\",\n    \"delete\",\n    \"keys\",\n    \"semop\",\n    \"waitpid\",\n    \"DESTROY\",\n    \"kill\",\n    \"send\",\n    \"wantarray\",\n    \"die\",\n    \"last\",\n    \"setgrent\",\n    \"warn\",\n    \"dump\",\n    \"lc\",\n    \"sethostent\",\n    \"write\",\n    \"each\",\n    \"lcfirst\",\n    \"setnetent\"\n  ],\n  builtinFileHandlers: [\"ARGV\", \"STDERR\", \"STDOUT\", \"ARGVOUT\", \"STDIN\", \"ENV\"],\n  builtinVariables: [\n    \"$!\",\n    \"$^RE_TRIE_MAXBUF\",\n    \"$LAST_REGEXP_CODE_RESULT\",\n    '$\"',\n    \"$^S\",\n    \"$LIST_SEPARATOR\",\n    \"$#\",\n    \"$^T\",\n    \"$MATCH\",\n    \"$$\",\n    \"$^TAINT\",\n    \"$MULTILINE_MATCHING\",\n    \"$%\",\n    \"$^UNICODE\",\n    \"$NR\",\n    \"$&\",\n    \"$^UTF8LOCALE\",\n    \"$OFMT\",\n    \"$'\",\n    \"$^V\",\n    \"$OFS\",\n    \"$(\",\n    \"$^W\",\n    \"$ORS\",\n    \"$)\",\n    \"$^WARNING_BITS\",\n    \"$OS_ERROR\",\n    \"$*\",\n    \"$^WIDE_SYSTEM_CALLS\",\n    \"$OSNAME\",\n    \"$+\",\n    \"$^X\",\n    \"$OUTPUT_AUTO_FLUSH\",\n    \"$,\",\n    \"$_\",\n    \"$OUTPUT_FIELD_SEPARATOR\",\n    \"$-\",\n    \"$`\",\n    \"$OUTPUT_RECORD_SEPARATOR\",\n    \"$.\",\n    \"$a\",\n    \"$PERL_VERSION\",\n    \"$/\",\n    \"$ACCUMULATOR\",\n    \"$PERLDB\",\n    \"$0\",\n    \"$ARG\",\n    \"$PID\",\n    \"$:\",\n    \"$ARGV\",\n    \"$POSTMATCH\",\n    \"$;\",\n    \"$b\",\n    \"$PREMATCH\",\n    \"$<\",\n    \"$BASETIME\",\n    \"$PROCESS_ID\",\n    \"$=\",\n    \"$CHILD_ERROR\",\n    \"$PROGRAM_NAME\",\n    \"$>\",\n    \"$COMPILING\",\n    \"$REAL_GROUP_ID\",\n    \"$?\",\n    \"$DEBUGGING\",\n    \"$REAL_USER_ID\",\n    \"$@\",\n    \"$EFFECTIVE_GROUP_ID\",\n    \"$RS\",\n    \"$[\",\n    \"$EFFECTIVE_USER_ID\",\n    \"$SUBSCRIPT_SEPARATOR\",\n    \"$\\\\\",\n    \"$EGID\",\n    \"$SUBSEP\",\n    \"$]\",\n    \"$ERRNO\",\n    \"$SYSTEM_FD_MAX\",\n    \"$^\",\n    \"$EUID\",\n    \"$UID\",\n    \"$^A\",\n    \"$EVAL_ERROR\",\n    \"$WARNING\",\n    \"$^C\",\n    \"$EXCEPTIONS_BEING_CAUGHT\",\n    \"$|\",\n    \"$^CHILD_ERROR_NATIVE\",\n    \"$EXECUTABLE_NAME\",\n    \"$~\",\n    \"$^D\",\n    \"$EXTENDED_OS_ERROR\",\n    \"%!\",\n    \"$^E\",\n    \"$FORMAT_FORMFEED\",\n    \"%^H\",\n    \"$^ENCODING\",\n    \"$FORMAT_LINE_BREAK_CHARACTERS\",\n    \"%ENV\",\n    \"$^F\",\n    \"$FORMAT_LINES_LEFT\",\n    \"%INC\",\n    \"$^H\",\n    \"$FORMAT_LINES_PER_PAGE\",\n    \"%OVERLOAD\",\n    \"$^I\",\n    \"$FORMAT_NAME\",\n    \"%SIG\",\n    \"$^L\",\n    \"$FORMAT_PAGE_NUMBER\",\n    \"@+\",\n    \"$^M\",\n    \"$FORMAT_TOP_NAME\",\n    \"@-\",\n    \"$^N\",\n    \"$GID\",\n    \"@_\",\n    \"$^O\",\n    \"$INPLACE_EDIT\",\n    \"@ARGV\",\n    \"$^OPEN\",\n    \"$INPUT_LINE_NUMBER\",\n    \"@INC\",\n    \"$^P\",\n    \"$INPUT_RECORD_SEPARATOR\",\n    \"@LAST_MATCH_START\",\n    \"$^R\",\n    \"$LAST_MATCH_END\",\n    \"$^RE_DEBUG_FLAGS\",\n    \"$LAST_PAREN_MATCH\"\n  ],\n  symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n  quoteLikeOps: [\"qr\", \"m\", \"s\", \"q\", \"qq\", \"qx\", \"qw\", \"tr\", \"y\"],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [\n        /[a-zA-Z\\-_][\\w\\-_]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@builtinFunctions\": \"type.identifier\",\n            \"@builtinFileHandlers\": \"variable.predefined\",\n            \"@quoteLikeOps\": {\n              token: \"@rematch\",\n              next: \"quotedConstructs\"\n            },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [\n        /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\n        {\n          cases: {\n            \"@builtinVariables\": \"variable.predefined\",\n            \"@default\": \"variable\"\n          }\n        }\n      ],\n      { include: \"@strings\" },\n      { include: \"@dblStrings\" },\n      { include: \"@perldoc\" },\n      { include: \"@heredoc\" },\n      [/[{}\\[\\]()]/, \"@brackets\"],\n      [/[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/, \"regexp\"],\n      [/@symbols/, \"operators\"],\n      { include: \"@numbers\" },\n      [/[,;]/, \"delimiter\"]\n    ],\n    whitespace: [\n      [/\\s+/, \"white\"],\n      [/(^#!.*$)/, \"metatag\"],\n      [/(^#.*$)/, \"comment\"]\n    ],\n    numbers: [\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\n      [/\\d+/, \"number\"]\n    ],\n    strings: [[/'/, \"string\", \"@stringBody\"]],\n    stringBody: [\n      [/'/, \"string\", \"@popall\"],\n      [/\\\\'/, \"string.escape\"],\n      [/./, \"string\"]\n    ],\n    dblStrings: [[/\"/, \"string\", \"@dblStringBody\"]],\n    dblStringBody: [\n      [/\"/, \"string\", \"@popall\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      { include: \"@variables\" },\n      [/./, \"string\"]\n    ],\n    quotedConstructs: [\n      [/(q|qw|tr|y)\\s*\\(/, { token: \"string.delim\", switchTo: \"@qstring.(.)\" }],\n      [/(q|qw|tr|y)\\s*\\[/, { token: \"string.delim\", switchTo: \"@qstring.[.]\" }],\n      [/(q|qw|tr|y)\\s*\\{/, { token: \"string.delim\", switchTo: \"@qstring.{.}\" }],\n      [/(q|qw|tr|y)\\s*</, { token: \"string.delim\", switchTo: \"@qstring.<.>\" }],\n      [/(q|qw|tr|y)#/, { token: \"string.delim\", switchTo: \"@qstring.#.#\" }],\n      [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, { token: \"string.delim\", switchTo: \"@qstring.$2.$2\" }],\n      [/(q|qw|tr|y)\\s+(\\w)/, { token: \"string.delim\", switchTo: \"@qstring.$2.$2\" }],\n      [/(qr|m|s)\\s*\\(/, { token: \"regexp.delim\", switchTo: \"@qregexp.(.)\" }],\n      [/(qr|m|s)\\s*\\[/, { token: \"regexp.delim\", switchTo: \"@qregexp.[.]\" }],\n      [/(qr|m|s)\\s*\\{/, { token: \"regexp.delim\", switchTo: \"@qregexp.{.}\" }],\n      [/(qr|m|s)\\s*</, { token: \"regexp.delim\", switchTo: \"@qregexp.<.>\" }],\n      [/(qr|m|s)#/, { token: \"regexp.delim\", switchTo: \"@qregexp.#.#\" }],\n      [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, { token: \"regexp.delim\", switchTo: \"@qregexp.$2.$2\" }],\n      [/(qr|m|s)\\s+(\\w)/, { token: \"regexp.delim\", switchTo: \"@qregexp.$2.$2\" }],\n      [/(qq|qx)\\s*\\(/, { token: \"string.delim\", switchTo: \"@qqstring.(.)\" }],\n      [/(qq|qx)\\s*\\[/, { token: \"string.delim\", switchTo: \"@qqstring.[.]\" }],\n      [/(qq|qx)\\s*\\{/, { token: \"string.delim\", switchTo: \"@qqstring.{.}\" }],\n      [/(qq|qx)\\s*</, { token: \"string.delim\", switchTo: \"@qqstring.<.>\" }],\n      [/(qq|qx)#/, { token: \"string.delim\", switchTo: \"@qqstring.#.#\" }],\n      [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, { token: \"string.delim\", switchTo: \"@qqstring.$2.$2\" }],\n      [/(qq|qx)\\s+(\\w)/, { token: \"string.delim\", switchTo: \"@qqstring.$2.$2\" }]\n    ],\n    qstring: [\n      [/\\\\./, \"string.escape\"],\n      [\n        /./,\n        {\n          cases: {\n            \"$#==$S3\": { token: \"string.delim\", next: \"@pop\" },\n            \"$#==$S2\": { token: \"string.delim\", next: \"@push\" },\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ],\n    qregexp: [\n      { include: \"@variables\" },\n      [/\\\\./, \"regexp.escape\"],\n      [\n        /./,\n        {\n          cases: {\n            \"$#==$S3\": {\n              token: \"regexp.delim\",\n              next: \"@regexpModifiers\"\n            },\n            \"$#==$S2\": { token: \"regexp.delim\", next: \"@push\" },\n            \"@default\": \"regexp\"\n          }\n        }\n      ]\n    ],\n    regexpModifiers: [[/[msixpodualngcer]+/, { token: \"regexp.modifier\", next: \"@popall\" }]],\n    qqstring: [{ include: \"@variables\" }, { include: \"@qstring\" }],\n    heredoc: [\n      [/<<\\s*['\"`]?([\\w\\-]+)['\"`]?/, { token: \"string.heredoc.delimiter\", next: \"@heredocBody.$1\" }]\n    ],\n    heredocBody: [\n      [\n        /^([\\w\\-]+)$/,\n        {\n          cases: {\n            \"$1==$S2\": [\n              {\n                token: \"string.heredoc.delimiter\",\n                next: \"@popall\"\n              }\n            ],\n            \"@default\": \"string.heredoc\"\n          }\n        }\n      ],\n      [/./, \"string.heredoc\"]\n    ],\n    perldoc: [[/^=\\w/, \"comment.doc\", \"@perldocBody\"]],\n    perldocBody: [\n      [/^=cut\\b/, \"type.identifier\", \"@popall\"],\n      [/./, \"comment.doc\"]\n    ],\n    variables: [\n      [/\\$\\w+/, \"variable\"],\n      [/@\\w+/, \"variable\"],\n      [/%\\w+/, \"variable\"]\n    ]\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3BlcmwvcGVybC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLE9BQU8sS0FBSztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxRQUFRLFlBQVksR0FBRztBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU0sUUFBUSxZQUFZLEdBQUc7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sb0NBQW9DLFlBQVksR0FBRztBQUN6RCxNQUFNLHVEQUF1RDtBQUM3RCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsSUFBSSxjQUFjLEVBQUUsY0FBYyxFQUFFO0FBQ2hGO0FBQ0E7QUFDQSxRQUFRLHdCQUF3QjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxxQkFBcUI7QUFDN0IsUUFBUSx3QkFBd0I7QUFDaEMsUUFBUSxxQkFBcUI7QUFDN0IsUUFBUSxxQkFBcUI7QUFDN0IsV0FBVztBQUNYLDBFQUEwRTtBQUMxRTtBQUNBLFFBQVEscUJBQXFCO0FBQzdCLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUJBQXVCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixpREFBaUQ7QUFDOUUsNkJBQTZCLGlEQUFpRDtBQUM5RSx3QkFBd0IsS0FBSyw0Q0FBNEMsRUFBRSxHQUFHO0FBQzlFLDRCQUE0QixpREFBaUQ7QUFDN0UseUJBQXlCLGlEQUFpRDtBQUMxRSw0Q0FBNEMsbURBQW1EO0FBQy9GLCtCQUErQixtREFBbUQ7QUFDbEYsMEJBQTBCLGlEQUFpRDtBQUMzRSwwQkFBMEIsaURBQWlEO0FBQzNFLHFCQUFxQixLQUFLLDRDQUE0QyxFQUFFLEdBQUc7QUFDM0UseUJBQXlCLGlEQUFpRDtBQUMxRSxzQkFBc0IsaURBQWlEO0FBQ3ZFLDBDQUEwQyxtREFBbUQ7QUFDN0YsNEJBQTRCLG1EQUFtRDtBQUMvRSx5QkFBeUIsa0RBQWtEO0FBQzNFLHlCQUF5QixrREFBa0Q7QUFDM0Usb0JBQW9CLEtBQUssNkNBQTZDLEVBQUUsR0FBRztBQUMzRSx3QkFBd0Isa0RBQWtEO0FBQzFFLHFCQUFxQixrREFBa0Q7QUFDdkUsd0NBQXdDLG9EQUFvRDtBQUM1RiwyQkFBMkIsb0RBQW9EO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHFDQUFxQztBQUM5RCx5QkFBeUIsc0NBQXNDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUJBQXVCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IseUJBQXlCLHNDQUFzQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLDJDQUEyQztBQUMxRixpQkFBaUIsdUJBQXVCLElBQUkscUJBQXFCO0FBQ2pFO0FBQ0EsdUNBQXVDLDREQUE0RDtBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRSIsInNvdXJjZXMiOlsid2VicGFjazovL3NhcHBoaXJlLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9wZXJsL3BlcmwuanM/MDI3NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBWZXJzaW9uOiAwLjQzLjAoOTRjMDU1YmNiZGQ0OWYwNGEwZmExNTUxNWU4NDg1NDJhNzlmYjk0OClcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9tb25hY28tZWRpdG9yL2Jsb2IvbWFpbi9MSUNFTlNFLnR4dFxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8vIHNyYy9iYXNpYy1sYW5ndWFnZXMvcGVybC9wZXJsLnRzXG52YXIgY29uZiA9IHtcbiAgY29tbWVudHM6IHtcbiAgICBsaW5lQ29tbWVudDogXCIjXCJcbiAgfSxcbiAgYnJhY2tldHM6IFtcbiAgICBbXCJ7XCIsIFwifVwiXSxcbiAgICBbXCJbXCIsIFwiXVwiXSxcbiAgICBbXCIoXCIsIFwiKVwiXVxuICBdLFxuICBhdXRvQ2xvc2luZ1BhaXJzOiBbXG4gICAgeyBvcGVuOiBcIntcIiwgY2xvc2U6IFwifVwiIH0sXG4gICAgeyBvcGVuOiBcIltcIiwgY2xvc2U6IFwiXVwiIH0sXG4gICAgeyBvcGVuOiBcIihcIiwgY2xvc2U6IFwiKVwiIH0sXG4gICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJyB9LFxuICAgIHsgb3BlbjogXCInXCIsIGNsb3NlOiBcIidcIiB9LFxuICAgIHsgb3BlbjogXCJgXCIsIGNsb3NlOiBcImBcIiB9XG4gIF0sXG4gIHN1cnJvdW5kaW5nUGFpcnM6IFtcbiAgICB7IG9wZW46IFwie1wiLCBjbG9zZTogXCJ9XCIgfSxcbiAgICB7IG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIgfSxcbiAgICB7IG9wZW46IFwiKFwiLCBjbG9zZTogXCIpXCIgfSxcbiAgICB7IG9wZW46ICdcIicsIGNsb3NlOiAnXCInIH0sXG4gICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiIH0sXG4gICAgeyBvcGVuOiBcImBcIiwgY2xvc2U6IFwiYFwiIH1cbiAgXVxufTtcbnZhciBsYW5ndWFnZSA9IHtcbiAgZGVmYXVsdFRva2VuOiBcIlwiLFxuICB0b2tlblBvc3RmaXg6IFwiLnBlcmxcIixcbiAgYnJhY2tldHM6IFtcbiAgICB7IHRva2VuOiBcImRlbGltaXRlci5icmFja2V0XCIsIG9wZW46IFwie1wiLCBjbG9zZTogXCJ9XCIgfSxcbiAgICB7IHRva2VuOiBcImRlbGltaXRlci5wYXJlbnRoZXNpc1wiLCBvcGVuOiBcIihcIiwgY2xvc2U6IFwiKVwiIH0sXG4gICAgeyB0b2tlbjogXCJkZWxpbWl0ZXIuc3F1YXJlXCIsIG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIgfVxuICBdLFxuICBrZXl3b3JkczogW1xuICAgIFwiX19EQVRBX19cIixcbiAgICBcImVsc2VcIixcbiAgICBcImxvY2tcIixcbiAgICBcIl9fRU5EX19cIixcbiAgICBcImVsc2lmXCIsXG4gICAgXCJsdFwiLFxuICAgIFwiX19GSUxFX19cIixcbiAgICBcImVxXCIsXG4gICAgXCJfX0xJTkVfX1wiLFxuICAgIFwiZXhwXCIsXG4gICAgXCJuZVwiLFxuICAgIFwic3ViXCIsXG4gICAgXCJfX1BBQ0tBR0VfX1wiLFxuICAgIFwiZm9yXCIsXG4gICAgXCJub1wiLFxuICAgIFwiYW5kXCIsXG4gICAgXCJmb3JlYWNoXCIsXG4gICAgXCJvclwiLFxuICAgIFwidW5sZXNzXCIsXG4gICAgXCJjbXBcIixcbiAgICBcImdlXCIsXG4gICAgXCJwYWNrYWdlXCIsXG4gICAgXCJ1bnRpbFwiLFxuICAgIFwiY29udGludWVcIixcbiAgICBcImd0XCIsXG4gICAgXCJ3aGlsZVwiLFxuICAgIFwiQ09SRVwiLFxuICAgIFwiaWZcIixcbiAgICBcInhvclwiLFxuICAgIFwiZG9cIixcbiAgICBcImxlXCIsXG4gICAgXCJfX0RJRV9fXCIsXG4gICAgXCJfX1dBUk5fX1wiXG4gIF0sXG4gIGJ1aWx0aW5GdW5jdGlvbnM6IFtcbiAgICBcIi1BXCIsXG4gICAgXCJFTkRcIixcbiAgICBcImxlbmd0aFwiLFxuICAgIFwic2V0cGdycFwiLFxuICAgIFwiLUJcIixcbiAgICBcImVuZGdyZW50XCIsXG4gICAgXCJsaW5rXCIsXG4gICAgXCJzZXRwcmlvcml0eVwiLFxuICAgIFwiLWJcIixcbiAgICBcImVuZGhvc3RlbnRcIixcbiAgICBcImxpc3RlblwiLFxuICAgIFwic2V0cHJvdG9lbnRcIixcbiAgICBcIi1DXCIsXG4gICAgXCJlbmRuZXRlbnRcIixcbiAgICBcImxvY2FsXCIsXG4gICAgXCJzZXRwd2VudFwiLFxuICAgIFwiLWNcIixcbiAgICBcImVuZHByb3RvZW50XCIsXG4gICAgXCJsb2NhbHRpbWVcIixcbiAgICBcInNldHNlcnZlbnRcIixcbiAgICBcIi1kXCIsXG4gICAgXCJlbmRwd2VudFwiLFxuICAgIFwibG9nXCIsXG4gICAgXCJzZXRzb2Nrb3B0XCIsXG4gICAgXCItZVwiLFxuICAgIFwiZW5kc2VydmVudFwiLFxuICAgIFwibHN0YXRcIixcbiAgICBcInNoaWZ0XCIsXG4gICAgXCItZlwiLFxuICAgIFwiZW9mXCIsXG4gICAgXCJtYXBcIixcbiAgICBcInNobWN0bFwiLFxuICAgIFwiLWdcIixcbiAgICBcImV2YWxcIixcbiAgICBcIm1rZGlyXCIsXG4gICAgXCJzaG1nZXRcIixcbiAgICBcIi1rXCIsXG4gICAgXCJleGVjXCIsXG4gICAgXCJtc2djdGxcIixcbiAgICBcInNobXJlYWRcIixcbiAgICBcIi1sXCIsXG4gICAgXCJleGlzdHNcIixcbiAgICBcIm1zZ2dldFwiLFxuICAgIFwic2htd3JpdGVcIixcbiAgICBcIi1NXCIsXG4gICAgXCJleGl0XCIsXG4gICAgXCJtc2dyY3ZcIixcbiAgICBcInNodXRkb3duXCIsXG4gICAgXCItT1wiLFxuICAgIFwiZmNudGxcIixcbiAgICBcIm1zZ3NuZFwiLFxuICAgIFwic2luXCIsXG4gICAgXCItb1wiLFxuICAgIFwiZmlsZW5vXCIsXG4gICAgXCJteVwiLFxuICAgIFwic2xlZXBcIixcbiAgICBcIi1wXCIsXG4gICAgXCJmbG9ja1wiLFxuICAgIFwibmV4dFwiLFxuICAgIFwic29ja2V0XCIsXG4gICAgXCItclwiLFxuICAgIFwiZm9ya1wiLFxuICAgIFwibm90XCIsXG4gICAgXCJzb2NrZXRwYWlyXCIsXG4gICAgXCItUlwiLFxuICAgIFwiZm9ybWF0XCIsXG4gICAgXCJvY3RcIixcbiAgICBcInNvcnRcIixcbiAgICBcIi1TXCIsXG4gICAgXCJmb3JtbGluZVwiLFxuICAgIFwib3BlblwiLFxuICAgIFwic3BsaWNlXCIsXG4gICAgXCItc1wiLFxuICAgIFwiZ2V0Y1wiLFxuICAgIFwib3BlbmRpclwiLFxuICAgIFwic3BsaXRcIixcbiAgICBcIi1UXCIsXG4gICAgXCJnZXRncmVudFwiLFxuICAgIFwib3JkXCIsXG4gICAgXCJzcHJpbnRmXCIsXG4gICAgXCItdFwiLFxuICAgIFwiZ2V0Z3JnaWRcIixcbiAgICBcIm91clwiLFxuICAgIFwic3FydFwiLFxuICAgIFwiLXVcIixcbiAgICBcImdldGdybmFtXCIsXG4gICAgXCJwYWNrXCIsXG4gICAgXCJzcmFuZFwiLFxuICAgIFwiLXdcIixcbiAgICBcImdldGhvc3RieWFkZHJcIixcbiAgICBcInBpcGVcIixcbiAgICBcInN0YXRcIixcbiAgICBcIi1XXCIsXG4gICAgXCJnZXRob3N0YnluYW1lXCIsXG4gICAgXCJwb3BcIixcbiAgICBcInN0YXRlXCIsXG4gICAgXCItWFwiLFxuICAgIFwiZ2V0aG9zdGVudFwiLFxuICAgIFwicG9zXCIsXG4gICAgXCJzdHVkeVwiLFxuICAgIFwiLXhcIixcbiAgICBcImdldGxvZ2luXCIsXG4gICAgXCJwcmludFwiLFxuICAgIFwic3Vic3RyXCIsXG4gICAgXCItelwiLFxuICAgIFwiZ2V0bmV0YnlhZGRyXCIsXG4gICAgXCJwcmludGZcIixcbiAgICBcInN5bWxpbmtcIixcbiAgICBcImFic1wiLFxuICAgIFwiZ2V0bmV0YnluYW1lXCIsXG4gICAgXCJwcm90b3R5cGVcIixcbiAgICBcInN5c2NhbGxcIixcbiAgICBcImFjY2VwdFwiLFxuICAgIFwiZ2V0bmV0ZW50XCIsXG4gICAgXCJwdXNoXCIsXG4gICAgXCJzeXNvcGVuXCIsXG4gICAgXCJhbGFybVwiLFxuICAgIFwiZ2V0cGVlcm5hbWVcIixcbiAgICBcInF1b3RlbWV0YVwiLFxuICAgIFwic3lzcmVhZFwiLFxuICAgIFwiYXRhbjJcIixcbiAgICBcImdldHBncnBcIixcbiAgICBcInJhbmRcIixcbiAgICBcInN5c3NlZWtcIixcbiAgICBcIkFVVE9MT0FEXCIsXG4gICAgXCJnZXRwcGlkXCIsXG4gICAgXCJyZWFkXCIsXG4gICAgXCJzeXN0ZW1cIixcbiAgICBcIkJFR0lOXCIsXG4gICAgXCJnZXRwcmlvcml0eVwiLFxuICAgIFwicmVhZGRpclwiLFxuICAgIFwic3lzd3JpdGVcIixcbiAgICBcImJpbmRcIixcbiAgICBcImdldHByb3RvYnluYW1lXCIsXG4gICAgXCJyZWFkbGluZVwiLFxuICAgIFwidGVsbFwiLFxuICAgIFwiYmlubW9kZVwiLFxuICAgIFwiZ2V0cHJvdG9ieW51bWJlclwiLFxuICAgIFwicmVhZGxpbmtcIixcbiAgICBcInRlbGxkaXJcIixcbiAgICBcImJsZXNzXCIsXG4gICAgXCJnZXRwcm90b2VudFwiLFxuICAgIFwicmVhZHBpcGVcIixcbiAgICBcInRpZVwiLFxuICAgIFwiYnJlYWtcIixcbiAgICBcImdldHB3ZW50XCIsXG4gICAgXCJyZWN2XCIsXG4gICAgXCJ0aWVkXCIsXG4gICAgXCJjYWxsZXJcIixcbiAgICBcImdldHB3bmFtXCIsXG4gICAgXCJyZWRvXCIsXG4gICAgXCJ0aW1lXCIsXG4gICAgXCJjaGRpclwiLFxuICAgIFwiZ2V0cHd1aWRcIixcbiAgICBcInJlZlwiLFxuICAgIFwidGltZXNcIixcbiAgICBcIkNIRUNLXCIsXG4gICAgXCJnZXRzZXJ2YnluYW1lXCIsXG4gICAgXCJyZW5hbWVcIixcbiAgICBcInRydW5jYXRlXCIsXG4gICAgXCJjaG1vZFwiLFxuICAgIFwiZ2V0c2VydmJ5cG9ydFwiLFxuICAgIFwicmVxdWlyZVwiLFxuICAgIFwidWNcIixcbiAgICBcImNob21wXCIsXG4gICAgXCJnZXRzZXJ2ZW50XCIsXG4gICAgXCJyZXNldFwiLFxuICAgIFwidWNmaXJzdFwiLFxuICAgIFwiY2hvcFwiLFxuICAgIFwiZ2V0c29ja25hbWVcIixcbiAgICBcInJldHVyblwiLFxuICAgIFwidW1hc2tcIixcbiAgICBcImNob3duXCIsXG4gICAgXCJnZXRzb2Nrb3B0XCIsXG4gICAgXCJyZXZlcnNlXCIsXG4gICAgXCJ1bmRlZlwiLFxuICAgIFwiY2hyXCIsXG4gICAgXCJnbG9iXCIsXG4gICAgXCJyZXdpbmRkaXJcIixcbiAgICBcIlVOSVRDSEVDS1wiLFxuICAgIFwiY2hyb290XCIsXG4gICAgXCJnbXRpbWVcIixcbiAgICBcInJpbmRleFwiLFxuICAgIFwidW5saW5rXCIsXG4gICAgXCJjbG9zZVwiLFxuICAgIFwiZ290b1wiLFxuICAgIFwicm1kaXJcIixcbiAgICBcInVucGFja1wiLFxuICAgIFwiY2xvc2VkaXJcIixcbiAgICBcImdyZXBcIixcbiAgICBcInNheVwiLFxuICAgIFwidW5zaGlmdFwiLFxuICAgIFwiY29ubmVjdFwiLFxuICAgIFwiaGV4XCIsXG4gICAgXCJzY2FsYXJcIixcbiAgICBcInVudGllXCIsXG4gICAgXCJjb3NcIixcbiAgICBcImluZGV4XCIsXG4gICAgXCJzZWVrXCIsXG4gICAgXCJ1c2VcIixcbiAgICBcImNyeXB0XCIsXG4gICAgXCJJTklUXCIsXG4gICAgXCJzZWVrZGlyXCIsXG4gICAgXCJ1dGltZVwiLFxuICAgIFwiZGJtY2xvc2VcIixcbiAgICBcImludFwiLFxuICAgIFwic2VsZWN0XCIsXG4gICAgXCJ2YWx1ZXNcIixcbiAgICBcImRibW9wZW5cIixcbiAgICBcImlvY3RsXCIsXG4gICAgXCJzZW1jdGxcIixcbiAgICBcInZlY1wiLFxuICAgIFwiZGVmaW5lZFwiLFxuICAgIFwiam9pblwiLFxuICAgIFwic2VtZ2V0XCIsXG4gICAgXCJ3YWl0XCIsXG4gICAgXCJkZWxldGVcIixcbiAgICBcImtleXNcIixcbiAgICBcInNlbW9wXCIsXG4gICAgXCJ3YWl0cGlkXCIsXG4gICAgXCJERVNUUk9ZXCIsXG4gICAgXCJraWxsXCIsXG4gICAgXCJzZW5kXCIsXG4gICAgXCJ3YW50YXJyYXlcIixcbiAgICBcImRpZVwiLFxuICAgIFwibGFzdFwiLFxuICAgIFwic2V0Z3JlbnRcIixcbiAgICBcIndhcm5cIixcbiAgICBcImR1bXBcIixcbiAgICBcImxjXCIsXG4gICAgXCJzZXRob3N0ZW50XCIsXG4gICAgXCJ3cml0ZVwiLFxuICAgIFwiZWFjaFwiLFxuICAgIFwibGNmaXJzdFwiLFxuICAgIFwic2V0bmV0ZW50XCJcbiAgXSxcbiAgYnVpbHRpbkZpbGVIYW5kbGVyczogW1wiQVJHVlwiLCBcIlNUREVSUlwiLCBcIlNURE9VVFwiLCBcIkFSR1ZPVVRcIiwgXCJTVERJTlwiLCBcIkVOVlwiXSxcbiAgYnVpbHRpblZhcmlhYmxlczogW1xuICAgIFwiJCFcIixcbiAgICBcIiReUkVfVFJJRV9NQVhCVUZcIixcbiAgICBcIiRMQVNUX1JFR0VYUF9DT0RFX1JFU1VMVFwiLFxuICAgICckXCInLFxuICAgIFwiJF5TXCIsXG4gICAgXCIkTElTVF9TRVBBUkFUT1JcIixcbiAgICBcIiQjXCIsXG4gICAgXCIkXlRcIixcbiAgICBcIiRNQVRDSFwiLFxuICAgIFwiJCRcIixcbiAgICBcIiReVEFJTlRcIixcbiAgICBcIiRNVUxUSUxJTkVfTUFUQ0hJTkdcIixcbiAgICBcIiQlXCIsXG4gICAgXCIkXlVOSUNPREVcIixcbiAgICBcIiROUlwiLFxuICAgIFwiJCZcIixcbiAgICBcIiReVVRGOExPQ0FMRVwiLFxuICAgIFwiJE9GTVRcIixcbiAgICBcIiQnXCIsXG4gICAgXCIkXlZcIixcbiAgICBcIiRPRlNcIixcbiAgICBcIiQoXCIsXG4gICAgXCIkXldcIixcbiAgICBcIiRPUlNcIixcbiAgICBcIiQpXCIsXG4gICAgXCIkXldBUk5JTkdfQklUU1wiLFxuICAgIFwiJE9TX0VSUk9SXCIsXG4gICAgXCIkKlwiLFxuICAgIFwiJF5XSURFX1NZU1RFTV9DQUxMU1wiLFxuICAgIFwiJE9TTkFNRVwiLFxuICAgIFwiJCtcIixcbiAgICBcIiReWFwiLFxuICAgIFwiJE9VVFBVVF9BVVRPX0ZMVVNIXCIsXG4gICAgXCIkLFwiLFxuICAgIFwiJF9cIixcbiAgICBcIiRPVVRQVVRfRklFTERfU0VQQVJBVE9SXCIsXG4gICAgXCIkLVwiLFxuICAgIFwiJGBcIixcbiAgICBcIiRPVVRQVVRfUkVDT1JEX1NFUEFSQVRPUlwiLFxuICAgIFwiJC5cIixcbiAgICBcIiRhXCIsXG4gICAgXCIkUEVSTF9WRVJTSU9OXCIsXG4gICAgXCIkL1wiLFxuICAgIFwiJEFDQ1VNVUxBVE9SXCIsXG4gICAgXCIkUEVSTERCXCIsXG4gICAgXCIkMFwiLFxuICAgIFwiJEFSR1wiLFxuICAgIFwiJFBJRFwiLFxuICAgIFwiJDpcIixcbiAgICBcIiRBUkdWXCIsXG4gICAgXCIkUE9TVE1BVENIXCIsXG4gICAgXCIkO1wiLFxuICAgIFwiJGJcIixcbiAgICBcIiRQUkVNQVRDSFwiLFxuICAgIFwiJDxcIixcbiAgICBcIiRCQVNFVElNRVwiLFxuICAgIFwiJFBST0NFU1NfSURcIixcbiAgICBcIiQ9XCIsXG4gICAgXCIkQ0hJTERfRVJST1JcIixcbiAgICBcIiRQUk9HUkFNX05BTUVcIixcbiAgICBcIiQ+XCIsXG4gICAgXCIkQ09NUElMSU5HXCIsXG4gICAgXCIkUkVBTF9HUk9VUF9JRFwiLFxuICAgIFwiJD9cIixcbiAgICBcIiRERUJVR0dJTkdcIixcbiAgICBcIiRSRUFMX1VTRVJfSURcIixcbiAgICBcIiRAXCIsXG4gICAgXCIkRUZGRUNUSVZFX0dST1VQX0lEXCIsXG4gICAgXCIkUlNcIixcbiAgICBcIiRbXCIsXG4gICAgXCIkRUZGRUNUSVZFX1VTRVJfSURcIixcbiAgICBcIiRTVUJTQ1JJUFRfU0VQQVJBVE9SXCIsXG4gICAgXCIkXFxcXFwiLFxuICAgIFwiJEVHSURcIixcbiAgICBcIiRTVUJTRVBcIixcbiAgICBcIiRdXCIsXG4gICAgXCIkRVJSTk9cIixcbiAgICBcIiRTWVNURU1fRkRfTUFYXCIsXG4gICAgXCIkXlwiLFxuICAgIFwiJEVVSURcIixcbiAgICBcIiRVSURcIixcbiAgICBcIiReQVwiLFxuICAgIFwiJEVWQUxfRVJST1JcIixcbiAgICBcIiRXQVJOSU5HXCIsXG4gICAgXCIkXkNcIixcbiAgICBcIiRFWENFUFRJT05TX0JFSU5HX0NBVUdIVFwiLFxuICAgIFwiJHxcIixcbiAgICBcIiReQ0hJTERfRVJST1JfTkFUSVZFXCIsXG4gICAgXCIkRVhFQ1VUQUJMRV9OQU1FXCIsXG4gICAgXCIkflwiLFxuICAgIFwiJF5EXCIsXG4gICAgXCIkRVhURU5ERURfT1NfRVJST1JcIixcbiAgICBcIiUhXCIsXG4gICAgXCIkXkVcIixcbiAgICBcIiRGT1JNQVRfRk9STUZFRURcIixcbiAgICBcIiVeSFwiLFxuICAgIFwiJF5FTkNPRElOR1wiLFxuICAgIFwiJEZPUk1BVF9MSU5FX0JSRUFLX0NIQVJBQ1RFUlNcIixcbiAgICBcIiVFTlZcIixcbiAgICBcIiReRlwiLFxuICAgIFwiJEZPUk1BVF9MSU5FU19MRUZUXCIsXG4gICAgXCIlSU5DXCIsXG4gICAgXCIkXkhcIixcbiAgICBcIiRGT1JNQVRfTElORVNfUEVSX1BBR0VcIixcbiAgICBcIiVPVkVSTE9BRFwiLFxuICAgIFwiJF5JXCIsXG4gICAgXCIkRk9STUFUX05BTUVcIixcbiAgICBcIiVTSUdcIixcbiAgICBcIiReTFwiLFxuICAgIFwiJEZPUk1BVF9QQUdFX05VTUJFUlwiLFxuICAgIFwiQCtcIixcbiAgICBcIiReTVwiLFxuICAgIFwiJEZPUk1BVF9UT1BfTkFNRVwiLFxuICAgIFwiQC1cIixcbiAgICBcIiReTlwiLFxuICAgIFwiJEdJRFwiLFxuICAgIFwiQF9cIixcbiAgICBcIiReT1wiLFxuICAgIFwiJElOUExBQ0VfRURJVFwiLFxuICAgIFwiQEFSR1ZcIixcbiAgICBcIiReT1BFTlwiLFxuICAgIFwiJElOUFVUX0xJTkVfTlVNQkVSXCIsXG4gICAgXCJASU5DXCIsXG4gICAgXCIkXlBcIixcbiAgICBcIiRJTlBVVF9SRUNPUkRfU0VQQVJBVE9SXCIsXG4gICAgXCJATEFTVF9NQVRDSF9TVEFSVFwiLFxuICAgIFwiJF5SXCIsXG4gICAgXCIkTEFTVF9NQVRDSF9FTkRcIixcbiAgICBcIiReUkVfREVCVUdfRkxBR1NcIixcbiAgICBcIiRMQVNUX1BBUkVOX01BVENIXCJcbiAgXSxcbiAgc3ltYm9sczogL1s6K1xcLVxcXiokJiVAPTw+IT98XFwvflxcLl0vLFxuICBxdW90ZUxpa2VPcHM6IFtcInFyXCIsIFwibVwiLCBcInNcIiwgXCJxXCIsIFwicXFcIiwgXCJxeFwiLCBcInF3XCIsIFwidHJcIiwgXCJ5XCJdLFxuICBlc2NhcGVzOiAvXFxcXCg/OlthYmZucnR2XFxcXFwiJ118eFswLTlBLUZhLWZdezEsNH18dVswLTlBLUZhLWZdezR9fFVbMC05QS1GYS1mXXs4fSkvLFxuICB0b2tlbml6ZXI6IHtcbiAgICByb290OiBbXG4gICAgICB7IGluY2x1ZGU6IFwiQHdoaXRlc3BhY2VcIiB9LFxuICAgICAgW1xuICAgICAgICAvW2EtekEtWlxcLV9dW1xcd1xcLV9dKi8sXG4gICAgICAgIHtcbiAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgXCJAa2V5d29yZHNcIjogXCJrZXl3b3JkXCIsXG4gICAgICAgICAgICBcIkBidWlsdGluRnVuY3Rpb25zXCI6IFwidHlwZS5pZGVudGlmaWVyXCIsXG4gICAgICAgICAgICBcIkBidWlsdGluRmlsZUhhbmRsZXJzXCI6IFwidmFyaWFibGUucHJlZGVmaW5lZFwiLFxuICAgICAgICAgICAgXCJAcXVvdGVMaWtlT3BzXCI6IHtcbiAgICAgICAgICAgICAgdG9rZW46IFwiQHJlbWF0Y2hcIixcbiAgICAgICAgICAgICAgbmV4dDogXCJxdW90ZWRDb25zdHJ1Y3RzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIkBkZWZhdWx0XCI6IFwiXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBbXG4gICAgICAgIC9bXFwkQCVdWypAIz9cXCtcXC1cXCQhXFx3XFxcXFxcXj48fjo7XFwuXSsvLFxuICAgICAgICB7XG4gICAgICAgICAgY2FzZXM6IHtcbiAgICAgICAgICAgIFwiQGJ1aWx0aW5WYXJpYWJsZXNcIjogXCJ2YXJpYWJsZS5wcmVkZWZpbmVkXCIsXG4gICAgICAgICAgICBcIkBkZWZhdWx0XCI6IFwidmFyaWFibGVcIlxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHsgaW5jbHVkZTogXCJAc3RyaW5nc1wiIH0sXG4gICAgICB7IGluY2x1ZGU6IFwiQGRibFN0cmluZ3NcIiB9LFxuICAgICAgeyBpbmNsdWRlOiBcIkBwZXJsZG9jXCIgfSxcbiAgICAgIHsgaW5jbHVkZTogXCJAaGVyZWRvY1wiIH0sXG4gICAgICBbL1t7fVxcW1xcXSgpXS8sIFwiQGJyYWNrZXRzXCJdLFxuICAgICAgWy9bXFwvXSg/Oig/OlxcWyg/OlxcXFxdfFteXFxdXSkrXFxdKXwoPzpcXFxcXFwvfFteXFxdXFwvXSkpKltcXC9dXFx3KlxccyooPz1bKS4sO118JCkvLCBcInJlZ2V4cFwiXSxcbiAgICAgIFsvQHN5bWJvbHMvLCBcIm9wZXJhdG9yc1wiXSxcbiAgICAgIHsgaW5jbHVkZTogXCJAbnVtYmVyc1wiIH0sXG4gICAgICBbL1ssO10vLCBcImRlbGltaXRlclwiXVxuICAgIF0sXG4gICAgd2hpdGVzcGFjZTogW1xuICAgICAgWy9cXHMrLywgXCJ3aGl0ZVwiXSxcbiAgICAgIFsvKF4jIS4qJCkvLCBcIm1ldGF0YWdcIl0sXG4gICAgICBbLyheIy4qJCkvLCBcImNvbW1lbnRcIl1cbiAgICBdLFxuICAgIG51bWJlcnM6IFtcbiAgICAgIFsvXFxkKlxcLlxcZCsoW2VFXVtcXC0rXT9cXGQrKT8vLCBcIm51bWJlci5mbG9hdFwiXSxcbiAgICAgIFsvMFt4WF1bMC05YS1mQS1GX10qWzAtOWEtZkEtRl0vLCBcIm51bWJlci5oZXhcIl0sXG4gICAgICBbL1xcZCsvLCBcIm51bWJlclwiXVxuICAgIF0sXG4gICAgc3RyaW5nczogW1svJy8sIFwic3RyaW5nXCIsIFwiQHN0cmluZ0JvZHlcIl1dLFxuICAgIHN0cmluZ0JvZHk6IFtcbiAgICAgIFsvJy8sIFwic3RyaW5nXCIsIFwiQHBvcGFsbFwiXSxcbiAgICAgIFsvXFxcXCcvLCBcInN0cmluZy5lc2NhcGVcIl0sXG4gICAgICBbLy4vLCBcInN0cmluZ1wiXVxuICAgIF0sXG4gICAgZGJsU3RyaW5nczogW1svXCIvLCBcInN0cmluZ1wiLCBcIkBkYmxTdHJpbmdCb2R5XCJdXSxcbiAgICBkYmxTdHJpbmdCb2R5OiBbXG4gICAgICBbL1wiLywgXCJzdHJpbmdcIiwgXCJAcG9wYWxsXCJdLFxuICAgICAgWy9AZXNjYXBlcy8sIFwic3RyaW5nLmVzY2FwZVwiXSxcbiAgICAgIFsvXFxcXC4vLCBcInN0cmluZy5lc2NhcGUuaW52YWxpZFwiXSxcbiAgICAgIHsgaW5jbHVkZTogXCJAdmFyaWFibGVzXCIgfSxcbiAgICAgIFsvLi8sIFwic3RyaW5nXCJdXG4gICAgXSxcbiAgICBxdW90ZWRDb25zdHJ1Y3RzOiBbXG4gICAgICBbLyhxfHF3fHRyfHkpXFxzKlxcKC8sIHsgdG9rZW46IFwic3RyaW5nLmRlbGltXCIsIHN3aXRjaFRvOiBcIkBxc3RyaW5nLiguKVwiIH1dLFxuICAgICAgWy8ocXxxd3x0cnx5KVxccypcXFsvLCB7IHRva2VuOiBcInN0cmluZy5kZWxpbVwiLCBzd2l0Y2hUbzogXCJAcXN0cmluZy5bLl1cIiB9XSxcbiAgICAgIFsvKHF8cXd8dHJ8eSlcXHMqXFx7LywgeyB0b2tlbjogXCJzdHJpbmcuZGVsaW1cIiwgc3dpdGNoVG86IFwiQHFzdHJpbmcuey59XCIgfV0sXG4gICAgICBbLyhxfHF3fHRyfHkpXFxzKjwvLCB7IHRva2VuOiBcInN0cmluZy5kZWxpbVwiLCBzd2l0Y2hUbzogXCJAcXN0cmluZy48Lj5cIiB9XSxcbiAgICAgIFsvKHF8cXd8dHJ8eSkjLywgeyB0b2tlbjogXCJzdHJpbmcuZGVsaW1cIiwgc3dpdGNoVG86IFwiQHFzdHJpbmcuIy4jXCIgfV0sXG4gICAgICBbLyhxfHF3fHRyfHkpXFxzKihbXkEtWmEtejAtOSNcXHNdKS8sIHsgdG9rZW46IFwic3RyaW5nLmRlbGltXCIsIHN3aXRjaFRvOiBcIkBxc3RyaW5nLiQyLiQyXCIgfV0sXG4gICAgICBbLyhxfHF3fHRyfHkpXFxzKyhcXHcpLywgeyB0b2tlbjogXCJzdHJpbmcuZGVsaW1cIiwgc3dpdGNoVG86IFwiQHFzdHJpbmcuJDIuJDJcIiB9XSxcbiAgICAgIFsvKHFyfG18cylcXHMqXFwoLywgeyB0b2tlbjogXCJyZWdleHAuZGVsaW1cIiwgc3dpdGNoVG86IFwiQHFyZWdleHAuKC4pXCIgfV0sXG4gICAgICBbLyhxcnxtfHMpXFxzKlxcWy8sIHsgdG9rZW46IFwicmVnZXhwLmRlbGltXCIsIHN3aXRjaFRvOiBcIkBxcmVnZXhwLlsuXVwiIH1dLFxuICAgICAgWy8ocXJ8bXxzKVxccypcXHsvLCB7IHRva2VuOiBcInJlZ2V4cC5kZWxpbVwiLCBzd2l0Y2hUbzogXCJAcXJlZ2V4cC57Ln1cIiB9XSxcbiAgICAgIFsvKHFyfG18cylcXHMqPC8sIHsgdG9rZW46IFwicmVnZXhwLmRlbGltXCIsIHN3aXRjaFRvOiBcIkBxcmVnZXhwLjwuPlwiIH1dLFxuICAgICAgWy8ocXJ8bXxzKSMvLCB7IHRva2VuOiBcInJlZ2V4cC5kZWxpbVwiLCBzd2l0Y2hUbzogXCJAcXJlZ2V4cC4jLiNcIiB9XSxcbiAgICAgIFsvKHFyfG18cylcXHMqKFteQS1aYS16MC05XyNcXHNdKS8sIHsgdG9rZW46IFwicmVnZXhwLmRlbGltXCIsIHN3aXRjaFRvOiBcIkBxcmVnZXhwLiQyLiQyXCIgfV0sXG4gICAgICBbLyhxcnxtfHMpXFxzKyhcXHcpLywgeyB0b2tlbjogXCJyZWdleHAuZGVsaW1cIiwgc3dpdGNoVG86IFwiQHFyZWdleHAuJDIuJDJcIiB9XSxcbiAgICAgIFsvKHFxfHF4KVxccypcXCgvLCB7IHRva2VuOiBcInN0cmluZy5kZWxpbVwiLCBzd2l0Y2hUbzogXCJAcXFzdHJpbmcuKC4pXCIgfV0sXG4gICAgICBbLyhxcXxxeClcXHMqXFxbLywgeyB0b2tlbjogXCJzdHJpbmcuZGVsaW1cIiwgc3dpdGNoVG86IFwiQHFxc3RyaW5nLlsuXVwiIH1dLFxuICAgICAgWy8ocXF8cXgpXFxzKlxcey8sIHsgdG9rZW46IFwic3RyaW5nLmRlbGltXCIsIHN3aXRjaFRvOiBcIkBxcXN0cmluZy57Ln1cIiB9XSxcbiAgICAgIFsvKHFxfHF4KVxccyo8LywgeyB0b2tlbjogXCJzdHJpbmcuZGVsaW1cIiwgc3dpdGNoVG86IFwiQHFxc3RyaW5nLjwuPlwiIH1dLFxuICAgICAgWy8ocXF8cXgpIy8sIHsgdG9rZW46IFwic3RyaW5nLmRlbGltXCIsIHN3aXRjaFRvOiBcIkBxcXN0cmluZy4jLiNcIiB9XSxcbiAgICAgIFsvKHFxfHF4KVxccyooW15BLVphLXowLTkjXFxzXSkvLCB7IHRva2VuOiBcInN0cmluZy5kZWxpbVwiLCBzd2l0Y2hUbzogXCJAcXFzdHJpbmcuJDIuJDJcIiB9XSxcbiAgICAgIFsvKHFxfHF4KVxccysoXFx3KS8sIHsgdG9rZW46IFwic3RyaW5nLmRlbGltXCIsIHN3aXRjaFRvOiBcIkBxcXN0cmluZy4kMi4kMlwiIH1dXG4gICAgXSxcbiAgICBxc3RyaW5nOiBbXG4gICAgICBbL1xcXFwuLywgXCJzdHJpbmcuZXNjYXBlXCJdLFxuICAgICAgW1xuICAgICAgICAvLi8sXG4gICAgICAgIHtcbiAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgXCIkIz09JFMzXCI6IHsgdG9rZW46IFwic3RyaW5nLmRlbGltXCIsIG5leHQ6IFwiQHBvcFwiIH0sXG4gICAgICAgICAgICBcIiQjPT0kUzJcIjogeyB0b2tlbjogXCJzdHJpbmcuZGVsaW1cIiwgbmV4dDogXCJAcHVzaFwiIH0sXG4gICAgICAgICAgICBcIkBkZWZhdWx0XCI6IFwic3RyaW5nXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICBdLFxuICAgIHFyZWdleHA6IFtcbiAgICAgIHsgaW5jbHVkZTogXCJAdmFyaWFibGVzXCIgfSxcbiAgICAgIFsvXFxcXC4vLCBcInJlZ2V4cC5lc2NhcGVcIl0sXG4gICAgICBbXG4gICAgICAgIC8uLyxcbiAgICAgICAge1xuICAgICAgICAgIGNhc2VzOiB7XG4gICAgICAgICAgICBcIiQjPT0kUzNcIjoge1xuICAgICAgICAgICAgICB0b2tlbjogXCJyZWdleHAuZGVsaW1cIixcbiAgICAgICAgICAgICAgbmV4dDogXCJAcmVnZXhwTW9kaWZpZXJzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIiQjPT0kUzJcIjogeyB0b2tlbjogXCJyZWdleHAuZGVsaW1cIiwgbmV4dDogXCJAcHVzaFwiIH0sXG4gICAgICAgICAgICBcIkBkZWZhdWx0XCI6IFwicmVnZXhwXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICBdLFxuICAgIHJlZ2V4cE1vZGlmaWVyczogW1svW21zaXhwb2R1YWxuZ2Nlcl0rLywgeyB0b2tlbjogXCJyZWdleHAubW9kaWZpZXJcIiwgbmV4dDogXCJAcG9wYWxsXCIgfV1dLFxuICAgIHFxc3RyaW5nOiBbeyBpbmNsdWRlOiBcIkB2YXJpYWJsZXNcIiB9LCB7IGluY2x1ZGU6IFwiQHFzdHJpbmdcIiB9XSxcbiAgICBoZXJlZG9jOiBbXG4gICAgICBbLzw8XFxzKlsnXCJgXT8oW1xcd1xcLV0rKVsnXCJgXT8vLCB7IHRva2VuOiBcInN0cmluZy5oZXJlZG9jLmRlbGltaXRlclwiLCBuZXh0OiBcIkBoZXJlZG9jQm9keS4kMVwiIH1dXG4gICAgXSxcbiAgICBoZXJlZG9jQm9keTogW1xuICAgICAgW1xuICAgICAgICAvXihbXFx3XFwtXSspJC8sXG4gICAgICAgIHtcbiAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgXCIkMT09JFMyXCI6IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRva2VuOiBcInN0cmluZy5oZXJlZG9jLmRlbGltaXRlclwiLFxuICAgICAgICAgICAgICAgIG5leHQ6IFwiQHBvcGFsbFwiXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBcIkBkZWZhdWx0XCI6IFwic3RyaW5nLmhlcmVkb2NcIlxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIFsvLi8sIFwic3RyaW5nLmhlcmVkb2NcIl1cbiAgICBdLFxuICAgIHBlcmxkb2M6IFtbL149XFx3LywgXCJjb21tZW50LmRvY1wiLCBcIkBwZXJsZG9jQm9keVwiXV0sXG4gICAgcGVybGRvY0JvZHk6IFtcbiAgICAgIFsvXj1jdXRcXGIvLCBcInR5cGUuaWRlbnRpZmllclwiLCBcIkBwb3BhbGxcIl0sXG4gICAgICBbLy4vLCBcImNvbW1lbnQuZG9jXCJdXG4gICAgXSxcbiAgICB2YXJpYWJsZXM6IFtcbiAgICAgIFsvXFwkXFx3Ky8sIFwidmFyaWFibGVcIl0sXG4gICAgICBbL0BcXHcrLywgXCJ2YXJpYWJsZVwiXSxcbiAgICAgIFsvJVxcdysvLCBcInZhcmlhYmxlXCJdXG4gICAgXVxuICB9XG59O1xuZXhwb3J0IHtcbiAgY29uZixcbiAgbGFuZ3VhZ2Vcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js\n");

/***/ })

}]);